@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using MyKudosDashboard.Interfaces;
@using MyKudosDashboard.Models;

@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams

@inject IWelcomeView WelcomeView;

@if (_isLoading)
{
    <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
        <FluentProgressRing />
    </div>
}
else if (!_isInTeams ||! string.IsNullOrEmpty(_errorMessage)){
    <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
        @_errorMessage
    </div>
}
else
{

    <style>
        div {
            float: left;
            padding: 5px;
        }

        .div1 {
        }

        .div2 {
        }
    </style>

    <div class="welcome page" style="padding-top:0px">

         
        <div class="row align-items-start" style="clear: both;height:90vh;">
            

            <div class="col-1" style="height:100%;min-width:300px">

                <!-- PROFILE -->
                <div class="card col-12 rounded-3 shadow-sm" style="padding-left: 0px;padding-right: 0px;padding-top: 0px;padding-bottom: 0px;height:100%">

                        <div class="card-header py-3">
                            <h4 class="my-0 fw-normal">🚀 Profile</h4>
                        </div>

                        <div class="card-body">

                            <div class="profile" >
                                <div class="avatar" style="float:none" >
                                    <img src=@_userPhoto style="height:80px;width:80px;border-radius: 50%;align-content:left" />                                
                                </div>

                                <div class="info" >
                                    <h5>@_user.DisplayName</h5>
                                   @* <h2  class="card-title pricing-card-title">
                                        500
                                        <small class="text-muted fw-light">XP</small>                                    
                                        </h2>    *@                            
                                </div>   
                                
                               @* <div style="clear:both;">
                                    <p>Achievements</p>

                                    <img src="badges/badge01.png" style="height:80px;width:80px;" />
                                    <img src="badges/badge02.png" style="height:80px;width:80px;"/>
                                    <img src="badges/badge03.png" style="height:80px;width:80px;" />
                                </div>*@

                          
                        </div>
                        
                        </div>

                    <FluentButton style="height:60px;margin:5px;" @onclick=@(()=>OpenSendKudosPanel()) >
                        <span>Send Kudos</span>
                        <FluentIcon Name="@FluentIcons.Send" Slot="start" Size="@IconSize.Size24" Filled=true />
                    </FluentButton>

                   

                    </div>
                </div>

            <div class="col-5 " style="height:100%">

                <div class="card mb-3 rounded-3 shadow-sm" style="padding-left: 0px;padding-right: 0px;padding-top: 0px;padding-bottom: 0px;height:100%">
                    <div class="card-header py-3" >
                    <h4 class="my-0 fw-normal" >👏 Kudos</h4>
                       
                </div>

                        <div class="card-body " >

                    <FluentTabs>
                            <FluentTab Text="All"></FluentTab>
                            <FluentTab Text="Kudos to me" />
                            <FluentTab Text="Kudos from me" />

                            <FluentTabPanel >
                                <KudosList kudos=@GetAllKudos() User=@_user UserPhoto=@_userPhoto />
                            </FluentTabPanel>
                            <FluentTabPanel>
                                <KudosList kudos=@GetKudosToMe() User=@_user UserPhoto=@_userPhoto />
                            </FluentTabPanel>
                            <FluentTabPanel >
                                <KudosList kudos=@GetKudosFromMe() User=@_user UserPhoto=@_userPhoto />
                            </FluentTabPanel>
                            
                    </FluentTabs>

                           

                </div>
                               
                    
                </div>
                </div>

          @*  <div class="col-2 " style="height:100%">

                <div class="card mb-4 rounded-3 shadow-sm" style="padding-left: 0px;padding-right: 0px;padding-top: 0px;padding-bottom: 0px;height:100%">
                        <div class="card-header py-3">
                            <h4 class="my-0 fw-normal">🥇 Top Contributors</h4>
                        </div>
                        <div class="card-body w-auto" >


                            <div class="list-group list-group-checkable d-grid gap-1 border-0 " style="min-width: 350px;height:75vh;overflow-y:scroll">

                                  <div class="profile" style="padding-top: 0px;padding-bottom: 0px;">
                                    <div class="avatar">
                                        <img src="profiles/zoro.png" style="height:80px;width:80px;float:left;border-radius: 50%" />
                                    </div>
                                    <div class="info" >
                                        <h5>Roronoa Zoro</h5>
                                        <h2 class="card-title pricing-card-title">650<small class="text-muted fw-light">XP</small></h2>
                                    </div>
                                </div>

                                <div class="profile" style="padding-top: 0px;padding-bottom: 0px;">
                                    <div class="avatar">
                                        <img src="profiles/luffy.png" style="height:80px;width:80px;float:left;border-radius: 50%" />
                                    </div>
                                    <div class="info" >
                                        <h5>Monkey D Luffy</h5>
                                        <h2 class="card-title pricing-card-title">500<small class="text-muted fw-light">XP</small></h2>
                                    </div>
                                </div>

                                <div class="profile" style="padding-top: 0px;padding-bottom: 0px;">
                                    <div class="avatar">
                                        <img src="profiles/nami.png" style="height:80px;width:80px;float:left;border-radius: 50%" />
                                    </div>
                                    <div class="info">
                                        <h5>Nami Cat Burglar</h5>
                                        <h2 class="card-title pricing-card-title">400<small class="text-muted fw-light">XP</small></h2>
                                    </div>
                                </div>

                                <div class="profile" style="padding-top: 0px;padding-bottom: 0px;">
                                    <div class="avatar">
                                        <img src="profiles/sogeking.jpg" style="height:80px;width:80px;float:left;border-radius: 50%" />
                                    </div>
                                    <div class="info">
                                        <h5>Sogeking</h5>
                                        <h2 class="card-title pricing-card-title">100<small class="text-muted fw-light">XP</small></h2>
                                    </div>
                                </div>

                                 <div class="profile" style="padding-top: 0px;padding-bottom: 0px;">
                                    <div class="avatar">
                                        <img src="profiles/sandi.jpeg" style="height:80px;width:80px;float:left;border-radius: 50%" />
                                    </div>
                                    <div class="info">
                                        <h5>Sandi</h5>
                                        <h2 class="card-title pricing-card-title">50<small class="text-muted fw-light">XP</small></h2>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>*@

            <SendKudos @ref=_sendKudosPanel ModalHidden=@_sendKudosIsHidden UserProfile=@_user UserPhoto=@_userPhoto
                   sendKudosCallBack=@SendCallBack />
         
        </div>


</div>

}


@code {

    UserInfo _user;

    bool _isInTeams;
    bool _isLoading = true;
    string _errorMessage = string.Empty;

    private string _userPhoto;

    private SendKudos _sendKudosPanel;
    private bool _sendKudosIsHidden = false;

    private void OnOpenModalParameterButtonClick() => _sendKudosIsHidden = false;
    private void OnCloseModalParameterButtonClick() => _sendKudosIsHidden = true;

    private List<KudosResponse> _kudosList;


    private void OnDismiss()
    {
        _sendKudosIsHidden = true;

    }


    private IEnumerable<KudosResponse> GetAllKudos()
    {
        return _kudosList.OrderByDescending(k => k.SendOn);
    }

    private IEnumerable<KudosResponse> GetKudosToMe()
    {
        return _kudosList.Where(k => k.To.Id == _user.ObjectId).OrderByDescending(k => k.SendOn);
    }

    private IEnumerable<KudosResponse> GetKudosFromMe()
    {
        return _kudosList.Where(k => k.From.Id == _user.ObjectId).OrderByDescending(k => k.SendOn);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _isInTeams = await MicrosoftTeams.IsInTeams();
            _errorMessage = string.Empty;

            if (_isInTeams)
            {
                try
                {
                    _user = await teamsUserCredential.GetUserInfoAsync();
                }
                catch
                {
                    _errorMessage = "You don't have access!";
                }               

                if (_user != null)
                {                    
                    _userPhoto = await WelcomeView.GetUserPhoto(_user.ObjectId);

                    _kudosList = WelcomeView.GetKudos().ToList();
                }
            }
            else
            {
                _errorMessage = "Not running in Microsoft Teams!";
            }

            _isLoading = false;
            StateHasChanged();
        }

    }

    private async  void SendCallBack(KudosResponse pKudos)
    {
        _kudosList = new();
        _kudosList.Add(pKudos);

        StateHasChanged();

        await InvokeAsync(() =>
        {
            _kudosList = WelcomeView.GetKudos().ToList();
            StateHasChanged();
        });

        //_kudosList = new();
        //  _kudosList.Add(pKudos);

        //List<KudosResponse> tempKudosList = new();



        //foreach (var item in _kudosList)
        //{

        //    tempKudosList.Add(new KudosResponse()
        //        {
        //            Id = item.Id,
        //            From = item.From,
        //            To = item.To,
        //            Message = item.Message,
        //            Title = item.Title,
        //            Likes = new(),
        //            SendOn = item.SendOn
        //        });
        //}

        //_kudosList = tempKudosList;
        
    }
    private void OpenSendKudosPanel()
    {
        _sendKudosIsHidden = false;

        _sendKudosPanel.SendKudosModal();

    }
}

