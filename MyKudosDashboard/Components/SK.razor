@using MyKudosDashboard.Interfaces;
@using MyKudosDashboard.Models;

@inject ISendKudosView SendKudosView;

<style>

    fluent-card {
        padding: 5px;
        margin: 5px;
        height: 55px
    }

    fluent-horizontal-scroll {
        max-width: 620px;
        margin-top: 20px;
        margin-left: 0px;
        margin-right: 10px;
    }

    .both-gradient {
        --scroll-fade-next: var(--fill-color);
        --scroll-fade-previous: var(--fill-color)
    }

    .top-align {
        --scroll-align: flex-start
    }

    .bottom-align {
        --scroll-align: flex-end
    }

    .media-scroller {
        --_spacer: var(--size-3);
        display: grid;
        gap: var(--_spacer);
        grid-auto-flow: column;
        grid-auto-columns: 41%;
        padding: 0 var(--_spacer) var(--_spacer);
        overflow-x: auto;
        overscroll-behavior-inline: contain;
        max-width: 620px;
    }

    .media-scroller--with-groups {
        grid-auto-columns: 80%;
    }

    .media-group {
        display: grid;
        gap: var(--_spacer);
        grid-auto-flow: column;
    }

    .media-element {
        display: grid;
        grid-template-rows: min-content;
        gap: var(--_spacer);
        padding: var(--_spacer);
        background: var(--surface-2);
        border-radius: var(--radius-2);
        box-shadow: var(--shadow-2);
    }

        .media-element > img {
            inline-size: 100%;
            aspect-ratio: 16 / 9;
            object-fit: cover;
        }

    .snaps-inline {
        scroll-snap-type: inline mandatory;
        scroll-padding-inline: var(--_spacer, 1rem);
    }

        .snaps-inline > * {
            scroll-snap-align: start;
        }

    /* general styling */

    .container {
        inline-size: min(100% - 4rem, 70rem);
        margin-inline: auto;
    }

    .flow {
        display: grid;
        gap: var(--size-3);
    }

    .page-header {
        padding-block: var(--size-9);
        margin-block-end: var(--size-9);
        background: var(--gradient-16);
        color: var(--gray-0);
        box-shadow: var(--shadow-2);
    }

    .page-title {
        font-size: var(--font-size-fluid-3);
    }

    .page-subtitle {
        font-size: var(--font-size-fluid-1);
    }

    .section-title {
        padding-inline-start: var(--size-6);
        margin-block: var(--size-9) var(--size-3);
    }
</style>

<FluentDialog   
                TrapFocus="true" aria-label="Simple dialog" Modal="true" 
                class="both-gradient"  style="--dialog-height: 600px;--dialog-width: 680px;"   
                
              >
<div>

<h2 class="section-title">Individual elements</h2>

@if (recognitions != null)
        {
            <div class="media-scroller snaps-inline" style="width:500px">

@*                @foreach (var item in recognitions.OrderBy(r => r.DisplayOrder))
                {

                    using System.Drawing.Graphics graphics = System.Drawing.Graphics.FromImage(new System.Drawing.Bitmap(1, 1));

                    var size = graphics.MeasureString(@item.Title, new System.Drawing.Font("Segoe UI", 16, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point));


                    <div class="media-element @(item.IsSelected ? "card border border-primary " : "card ")"
                    style="width:@(@size.Width +40)px;height: 55px" >

                        <div style="padding:0px;padding-top:2px;font-family:'Segoe UI';font-size:medium" data-toggle="tooltip" data-placement="top" title=@item.Description>
                            <h3     style="float: left;">@item.Emoji</h3>
                            <span class="btn stretched-link" style="float: left;padding-top:5px;padding-left:0px;Segoe UI';font-size:medium"
                            >@item.Title</span>


                        </div>
                    </div>


                }*@

                <FluentHorizontalScroll Speed="600" Easing=ScrollEasing.EaseInOut class="both-gradient">

                    @foreach (var item in recognitions.OrderBy(r => r.DisplayOrder))
                    {

                        using System.Drawing.Graphics graphics = System.Drawing.Graphics.FromImage(new System.Drawing.Bitmap(1, 1));

                        var size = graphics.MeasureString(@item.Title, new System.Drawing.Font("Segoe UI", 16, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point));


                        <div class="@(item.IsSelected ? "card border border-primary " : "card ")"
                             style="width:@(@size.Width +40)px;height: 55px">

                            <div style="padding:0px;padding-top:2px;font-family:'Segoe UI';font-size:medium" data-toggle="tooltip" data-placement="top" title=@item.Description>
                                <h3 style="float: left;">@item.Emoji</h3>
                                <span class="btn stretched-link" style="float: left;padding-top:5px;padding-left:0px;Segoe UI';font-size:medium"
                             >@item.Title</span>


                            </div>
                        </div>


                    }


                </FluentHorizontalScroll>

            </div>
        }


</div>
</FluentDialog>
@code {

    [Parameter]
    public bool ModalHidden { get; set; } = true;

    private IEnumerable<RecognitionViewModel> recognitions;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender && recognitions == null)
        {

            recognitions = await SendKudosView.GetRecognitionsAsync();

            await InvokeAsync(StateHasChanged);
        }
    }

}
